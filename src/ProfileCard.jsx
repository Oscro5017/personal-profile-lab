import React, { useState } from 'react';
import './ProfileCard.css';

function ProfileCard({ profile }) {
    // üîπ Theme state
    const [isDarkMode, setIsDarkMode] = useState(false);

    // üîπ Challenge 3 states
    const [viewCount, setViewCount] = useState(0);
    const [favoriteHobbies, setFavoriteHobbies] = useState([]);
    const [showContactForm, setShowContactForm] = useState(false);
    const [contactMessage, setContactMessage] = useState("");

    // ‚úÖ Toggle theme
    const toggleTheme = () => setIsDarkMode(!isDarkMode);

    // ‚úÖ Card class
    const cardClassName = `profile-card ${isDarkMode ? 'dark-mode' : 'light-mode'}`;

    // ‚úÖ Avatar (initials)
    const getInitials = (name) =>
        name
            .split(' ')
            .map(n => n[0])
            .join('')
            .toUpperCase();

    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° view count ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πå‡∏î
    const handleCardClick = () => {
        setViewCount(viewCount + 1);
    };

    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö hobby ‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö
    const toggleFavoriteHobby = (hobby) => {
        setFavoriteHobbies((prev) =>
            prev.includes(hobby)
                ? prev.filter(h => h !== hobby)
                : [...prev, hobby]
        );
    };

    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô contact form
    const handleContactClick = () => {
        setShowContactForm(!showContactForm);
    };

    // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡πÅ‡∏ó‡∏ô alert)
    const handleSubmitContact = (e) => {
        e.preventDefault();
        alert(`‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á ${profile.name}: "${contactMessage}"`);
        setContactMessage("");
        setShowContactForm(false);
    };

    // ‚úÖ Skill click
    const handleSkillClick = (skill) => {
        alert(`${profile.name} ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÉ‡∏ô ${skill}!`);
    };

    return (
        <div className={cardClassName} onClick={handleCardClick}>
            {/* üëÅÔ∏è View Counter */}
            <div className="view-counter">
                üëÅÔ∏è Views: {viewCount}
            </div>

            {/* Header */}
            <div className="profile-header">
                <div className="profile-avatar">{getInitials(profile.name)}</div>
                <h1 className="profile-name">{profile.name}</h1>
                <div className="student-id">{profile.studentId}</div>

                <button className="theme-toggle" onClick={(e) => {
                    e.stopPropagation();
                    toggleTheme();
                }}>
                    {isDarkMode ? 'üåô' : '‚òÄÔ∏è'}
                </button>
            </div>

            {/* Basic Info */}
            <div className="profile-info">
                <div className="info-item"><div className="info-label">‡∏™‡∏≤‡∏Ç‡∏≤</div><div className="info-value">{profile.major}</div></div>
                <div className="info-item"><div className="info-label">‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ</div><div className="info-value">{profile.year}</div></div>
                <div className="info-item"><div className="info-label">‡∏≠‡∏≤‡∏¢‡∏∏</div><div className="info-value">{profile.age} ‡∏õ‡∏µ</div></div>
                <div className="info-item"><div className="info-label">‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</div><div className="info-value">{profile.gpa.toFixed(2)} {profile.gpa >= 3.5 && 'üåü'}</div></div>
            </div>

            {/* Achievements */}
            <div className="profile-section">
                <h3>üèÜ Achievements</h3>
                <div className="achievements">
                    {profile.gpa >= 3.5 && <span className="achievement-badge">üåü ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°</span>}
                    {profile.skills.length >= 5 && <span className="achievement-badge">üí™ Multi-skilled</span>}
                    {favoriteHobbies.length >= 3 && <span className="achievement-badge">üíñ Passionate</span>}
                </div>
            </div>

            {/* üéØ Hobbies (Interactive) */}
            <div className="profile-section">
                <h3>üéØ ‡∏á‡∏≤‡∏ô‡∏≠‡∏î‡∏¥‡πÄ‡∏£‡∏Å</h3>
                <ul className="hobbies-list">
                    {profile.hobbies.map((hobby, index) => (
                        <li
                            key={index}
                            className={`hobby-item ${favoriteHobbies.includes(hobby) ? 'favorite' : ''}`}
                            onClick={(e) => {
                                e.stopPropagation();
                                toggleFavoriteHobby(hobby);
                            }}
                        >
                            {hobby} {favoriteHobbies.includes(hobby) && 'üíñ'}
                        </li>
                    ))}
                </ul>
            </div>

            {/* üíª Skills */}
            <div className="profile-section">
                <h3>üíª ‡∏ó‡∏±‡∏Å‡∏©‡∏∞</h3>
                <div className="skills">
                    {profile.skills.map((skill, index) => (
                        <div
                            key={index}
                            className="skill-tag"
                            onClick={(e) => {
                                e.stopPropagation();
                                handleSkillClick(skill);
                            }}
                        >
                            {skill}
                        </div>
                    ))}
                </div>
            </div>

            {/* üåê Social Links */}
            {profile.socialLinks && profile.socialLinks.length > 0 && (
                <div className="profile-section">
                    <h3>üåê Social Media</h3>
                    <div className="social-links">
                        {profile.socialLinks.map((link, index) => (
                            <a
                                key={index}
                                href={link.url}
                                target="_blank"
                                rel="noreferrer"
                                className="social-link"
                                onClick={(e) => e.stopPropagation()}
                            >
                                {link.platform}
                            </a>
                        ))}
                    </div>
                </div>
            )}

            {/* üìß Contact Button */}
            <button
                className="contact-button"
                onClick={(e) => {
                    e.stopPropagation();
                    handleContactClick();
                }}
            >
                üìß ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ {profile.name}
            </button>

            {/* Contact Form */}
            {showContactForm && (
                <div className="contact-form" onClick={(e) => e.stopPropagation()}>
                    <h4>‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á {profile.name}</h4>
                    <form onSubmit={handleSubmitContact}>
                        <textarea
                            value={contactMessage}
                            onChange={(e) => setContactMessage(e.target.value)}
                            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
                            required
                        />
                        <button type="submit">‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</button>
                    </form>
                </div>
            )}
        </div>
    );
}

export default ProfileCard;
